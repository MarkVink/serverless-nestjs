service: serverless-nestjs

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-plugin-warmup
  - serverless-prune-plugin
  - serverless-api-gateway-caching
provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'lambda:InvokeFunction'
      Resource:
        - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${self:service}-${opt:stage, 'dev'}-*

functions:
  index:
    handler: dist/src/lambda.handler
    events:
    - http:
        cors: true
        path: '/articles/{id}'
        method: get
        caching:
          enabled: true
    - http:
        cors: true
        path: '{proxy+}'
        method: any
        caching:
          enabled: false

custom:
  warmup:
    default:
      enabled: true
      role: IamRoleLambdaExecution
      events:
        - schedule: rate(5 minutes)
      prewarm: true
      concurrency: 1
  prune:
    automatic: true
    number: 5
  apiGatewayCaching:
    enabled: true

# only include the Prisma binary required on AWS Lambda while packaging
package:
  patterns:
    - '!node_modules/.prisma/client/libquery_engine-*'
    - 'node_modules/.prisma/client/libquery_engine-rhel-*'
    - '!node_modules/prisma/libquery_engine-*'
    - '!node_modules/@prisma/engines/**'